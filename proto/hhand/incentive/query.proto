syntax = "proto3";

package hhand.incentive;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "hhand/incentive/params.proto";
import "hhand/incentive/bribes.proto";
import "hhand/incentive/denom_trace.proto";

option go_package = "hhand/x/incentive/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/hhand/incentive/params";
  
  }
  
  // Queries a list of Bribes items.
  rpc Bribes    (QueryGetBribesRequest) returns (QueryGetBribesResponse) {
    option (google.api.http).get = "/hhand/incentive/bribes/{index}";
  
  }
  rpc BribesAll (QueryAllBribesRequest) returns (QueryAllBribesResponse) {
    option (google.api.http).get = "/hhand/incentive/bribes";
  
  }
  
  // Queries a list of DenomTrace items.
  rpc DenomTrace    (QueryGetDenomTraceRequest) returns (QueryGetDenomTraceResponse) {
    option (google.api.http).get = "/hhand/incentive/denom_trace/{index}";
  
  }
  rpc DenomTraceAll (QueryAllDenomTraceRequest) returns (QueryAllDenomTraceResponse) {
    option (google.api.http).get = "/hhand/incentive/denom_trace";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetBribesRequest {
  string index = 1;
}

message QueryGetBribesResponse {
  Bribes bribes = 1 [(gogoproto.nullable) = false];
}

message QueryAllBribesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBribesResponse {
  repeated Bribes                                 bribes     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDenomTraceRequest {
  string index = 1;
}

message QueryGetDenomTraceResponse {
  DenomTrace denomTrace = 1 [(gogoproto.nullable) = false];
}

message QueryAllDenomTraceRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDenomTraceResponse {
  repeated DenomTrace                             denomTrace = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

